/************************************************************/
/*****              SqlDataProvider                     *****/
/*****                                                  *****/
/*****                                                  *****/
/***** Note: To manually execute this script you must   *****/
/*****       perform a search and replace operation     *****/
/*****       for {databaseOwner} and {objectQualifier}  *****/
/*****                                                  *****/
/************************************************************/

/** Create Table **/

if not exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}TodoItems]') and OBJECTPROPERTY(id, N'IsTable') = 1)
	BEGIN
		CREATE TABLE {databaseOwner}[{objectQualifier}TodoItems]
		(
			[ModuleID] [int] NOT NULL,
			[ItemID] [int] NOT NULL IDENTITY(1, 1),
			[Content] nvarchar(max) NULL,
			[Complete] bit NULL,
			[CreatedByUser] [int] NOT NULL,
			[CreatedDate] [datetime] NOT NULL
		)

		ALTER TABLE {databaseOwner}[{objectQualifier}TodoItems] ADD CONSTRAINT [PK_{objectQualifier}TodoItems] PRIMARY KEY CLUSTERED ([ItemID])
		CREATE NONCLUSTERED INDEX [IX_{objectQualifier}TodoItems] ON {databaseOwner}[{objectQualifier}TodoItems] ([ModuleID])

		ALTER TABLE {databaseOwner}[{objectQualifier}TodoItems] WITH NOCHECK ADD CONSTRAINT [FK_{objectQualifier}TodoItems_{objectQualifier}Modules] FOREIGN KEY ([ModuleID]) REFERENCES {databaseOwner}[{objectQualifier}Modules] ([ModuleID]) ON DELETE CASCADE
	END
GO


/** Drop Existing Stored Procedures **/

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}TodoItems_GetTodoItems]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	drop procedure {databaseOwner}{objectQualifier}TodoItems_GetTodoItems
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}TodoItems_GetTodoItem]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	drop procedure {databaseOwner}{objectQualifier}TodoItems_GetTodoItem
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}TodoItems_AddTodoItem]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	drop procedure {databaseOwner}{objectQualifier}TodoItems_AddTodoItem
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}TodoItems_UpdateTodoItem]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	drop procedure {databaseOwner}{objectQualifier}TodoItems_UpdateTodoItem
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}[{objectQualifier}TodoItems_DeleteTodoItem]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	drop procedure {databaseOwner}{objectQualifier}TodoItems_DeleteTodoItem
GO

/** Create Stored Procedures **/


create procedure {databaseOwner}{objectQualifier}TodoItems_GetTodoItems
	@ModuleId int
as

select ModuleId,
       ItemId,
       Content,
	   Complete,
       CreatedByUser,
       I.CreatedDate,
       [CreatedByUserName] = U.FirstName + ' ' + U.LastName
from {databaseOwner}{objectQualifier}TodoItems I
inner join {databaseOwner}{objectQualifier}Users U on I.CreatedByUser = U.UserId
where  ModuleId = @ModuleId
order by ItemId DESC
GO

create procedure {databaseOwner}{objectQualifier}TodoItems_GetTodoItem

	@ModuleId int,
	@ItemId int
as

select ModuleId,
       ItemId,
       Content,
	   Complete,
       CreatedByUser,
       I.CreatedDate,
       [CreatedByUserName] = U.FirstName + ' ' + U.LastName
from {databaseOwner}{objectQualifier}TodoItems I
inner join {databaseOwner}{objectQualifier}Users U on I.CreatedByUser = U.UserId
where  ModuleId = @ModuleId
and ItemId = @ItemId
GO


create procedure {databaseOwner}{objectQualifier}TodoItems_AddTodoItem
	@ModuleId       int,
	@Content        nvarchar(max),
	@UserID         int
as

insert into {databaseOwner}{objectQualifier}TodoItems (
	ModuleId,
	Content,
	CreatedByUser,
	CreatedDate
) 
values (
	@ModuleId,
	@Content,
	@UserID,
	getdate()
)

GO

create procedure {databaseOwner}{objectQualifier}TodoItems_UpdateTodoItem

	@ModuleId       int,
	@ItemId         int,
	@Content        nvarchar(max),
	@Complete		bit,
	@UserID         int

as

update {databaseOwner}{objectQualifier}TodoItems
set    Content       = @Content,
	   Complete		 = @Complete,
       CreatedByUser = @UserID,
       CreatedDate   = getdate()
where  ModuleId = @ModuleId
and    ItemId = @ItemId

GO

create procedure {databaseOwner}{objectQualifier}TodoItems_DeleteTodoItem

	@ModuleId       int,
	@ItemId         int
as

delete
from   {databaseOwner}{objectQualifier}TodoItems
where  ModuleId = @ModuleId
and    ItemId = @ItemId

GO

/************************************************************/
/*****              SqlDataProvider                     *****/
/************************************************************/